{% set profile = project.profile %}
{% set scheme = project.scheme %}
{% set name = name or project.name %}
# This script was generated by epm for sandbox command
# {{ name }} of profile {{ profile.name }} scheme {{ scheme.name }}
# You can set environment vars to run on shell or docker
#  EPM_SANDBOX_RUNNER: [docker, shell]
#     If this was not set, docker be token into account first, then then shell
#  EPM_SANDBOX_STORAGE: path
#     conan storage path, if not set use ~/.epm/.conan/data
#
# normally you should invoke this in project directory
# .epm/{{ project.folder.name }}/sandbox/{{name}}
#
# Actually, you do not have to call this script directly.
# You should use epm sandbox command like below 
# !!! MAKE SURE you are in project directory
#    epm sandbox --profile {{ profile.name }} {{ '--scheme %s' % scheme.name if scheme.name else '' }} {{ name }}
###########################################################
set EPM_SANDBOX_PACKAGE_NAME={{project.name}}
set EPM_SANDBOX_PACKAGE_VERSION={{project.version}}
set EPM_SANDBOX_PACKAGE_REFERENCE={{project.reference}}
set EPM_SANDBOX_PACKAGE_REFERENCE_DIR={{project.reference.dir_repr()}}
set EPM_SANDBOX_PACKAGE_ID={{package_id}}

_runner=$EPM_SANDBOX_RUNNER
_storage=$EPM_SANDBOX_STORAGE
_sudo=$EPM_SANDBOX_SUDO
_home=$EPM_SANDBOX_HOME
_project=$EPM_SANDBOX_PROJECT
_image=$EPM_SANDBOX_IMAGE
_shell=$EPM_SANDBOX_SHELL
_dshell=$EPM_SANDBOX_DOCKER_SHELL
_dhome=$EPM_SADNBOX_DOCKER_HOME
_dimage=$EPM_SANDBOX_DOCKER_IMAGE
[ -z "$_storage" ] && _storage=$CONAN_STORAGE_PATH
[ -z "$_storage" ] && _storage=~/.epm/.conan/data
[ -z "$_runner"  ] && _runner='auto'
[ -z "$_project" ] && _project=$PWD

if [ -z "$_shell" ]; then
  if [ -f /bin/bash ]; then
    _shell=/bin/bash
  else
    _shell=/bin/sh
  fi
fi

if [ -z "$_sudo" ]; then
  $(which sudo > /dev/null)
  if [ -$? -eq 0 ]; then
    _sudo=sudo
  else
    _sudo=
  fi
fi

if [ "$_runner" = "auto" ]; then
  $(which docker > /dev/null)
  _has_docker=$?
  if [ $_has_docker -eq 0 ]; then
    _runner='docker'
  else
    _runner='shell'
  fi
fi
{% set docker = profile.docker.runner or {} %}
if [ "$_runner" = "docker" ]; then
  [ -z "$_dimage"   ] && _dimage={{ docker['image'] }}
  [ -z "$_dhome"    ] && _dhome={{ docker['home'] }}
  [ -z "$_dshell"   ] && _dshell={{ docker['shell'] }}

else
  [ -z "$_home"    ] && _home=$(cd ~;pwd)
fi

{% if command == 'create' %}
if [ -n "$EPM_SANDBOX_ARCHIVE" ]; then
_package_dir=$EPM_SANDBOX_ARCHIVE/$EPM_SANDBOX_PACKAGE_REFERENCE_DIR/package/$EPM_SANDBOX_PACKAGE_ID
else
_package_dir=$_storage/$EPM_SANDBOX_PACKAGE_REFERENCE_DIR/package/$EPM_SANDBOX_PACKAGE_ID
fi
{% else %}
_build_dir=$EPM_SANDBOX_PROJECT/{{project.folder.out}}/build
_package_dir=$EPM_SANDBOX_PROJECT/{{project.folder.out}}/package
{% endif %}



_mount()
{
    home=$1
    storage=$2
    pkg_dir=$3

    $_sudo rm -rf $_home/.sandbox
    $_sudo mkdir -p $_home/.sandbox

    $_sudo chmod 777 $_home/.sandbox

    mkdir -p $home/.sandbox/lib
    mkdir -p $home/.sandbox/bin

{% if command == 'create' %}
{% for lib in libs %}
    ln -s ${pkg_dir}/${lib} $home/.sandbox/lib/{{lib}}
{% endfor %}
{% endif %}
{% for i in deps %}
    ln -s ${storage}/${lib} $home/.sandbox/lib/{{lib}}
{% endfor %}


{% set program_dir = "{}/{}".format(project.folder.program, executable.name)%}

{% if where == 'project' %}
    ln -s $_project/{{program_dir}}/{{filename}} $home/.sandbox/bin/{{executable.name}}
{% else %}
    ln -s $_package_dir/{{filename}} $home/.sandbox/bin/{{executable.name}}
{% endif %}
}

_docker_exec()
{
  home=$_dhome
  image=$_dimage
  shell=$_dshell
  storage=$home/@host/conan.storage
  project=$home/@host/project

  {%set cname = project.folder.name.replace('@','.').replace('/','') %}

  _CMD="docker run -t --rm --name {{package_name}}--sandbox.{{ name }}--{{cname}}.{{ range(100000, 999999) | random }}"
  {# % if sandbox.privileged %}
  _CMD=" $_CMD --privileged"
  {% endif %}
  {% for port in sandbox.ports %}
  _CMD=" $_CMD -p {{port}}:{{port}}"
  {% endfor % #}

  _CMD=" $_CMD -v $_storage:${storage}"
  _CMD=" $_CMD -v $_project:${project}"
  _CMD=" $_CMD -e EPM_SANDBOX_STORAGE=${storage}"
  _CMD=" $_CMD -e EPM_SANDBOX_PROJECT=${project}"
  _CMD=" $_CMD -e EPM_SADNBOX_SHELL=${shell}"
  _CMD=" $_CMD -e EPM_SANDBOX_HOME=${home}"
  _CMD=" $_CMD -e EPM_SANDBOX_RUNNER=shell"
  _CMD=" $_CMD -w $home"
  _CMD=" $_CMD $image $shell -c "

  $_sudo $_CMD "${project}/.epm/{{ project.folder.name }}/sandbox/{{executable.name}}/run $*"
}
#
#
#
set -e

if [ "$_runner" = "shell" ]; then
  _mount $_home $_storage $EPM_SANDBOX_PACKAGE_DIR
{% if command == 'create' %}
  export LD_LIBRARY_PATH=$_home/.sandbox/lib:$LD_LIBRARY_PATH
{% else %}
  export LD_LIBRARY_PATH=$_build_dir/lib:$_home/.sandbox/lib:$LD_LIBRARY_PATH
{% endif %}
  $_home/.sandbox/bin/{{ name }} {{ arguments }} $*
else
  _docker_exec $*
fi
