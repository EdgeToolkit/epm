#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
import glob
import shutil
import yaml

from conans import ConanFile, CMake, tools
from epm.tool.conan import Packager
ConanFile = Packager()

class {{ name | capitalize | replace('-', '_') }}Conan(ConanFile):
    exports_sources = ["CMakeLists.txt", "tests/*", "include/*", "source/*", "cmake/*"]
    generators = "cmake"
    settings = "os", "arch", "compiler", "build_type"
    options = {"shared": [True, False],
               "fPIC": [True, False]
               }
    default_options = {"shared": False,
                       "fPIC": True
                       }

    def requirements(self):
        for name, ref in self.manifest.dependencies.items():
            self.requires.add_ref(ref)

    def configure(self):
        if self.settings.os == "Windows" and self.settings.compiler == "Visual Studio":
            del self.options.fPIC

    def _configure_cmake(self):
        cmake = CMake(self, set_cmake_flags=True)
        cmake.configure()
        return cmake

    def build(self):
        cmake = self._configure_cmake()
        cmake.build()


    def package(self):
        cmake = self._configure_cmake()
        cmake.install()

    def package_info(self):
        self.cpp_info.libs = tools.collect_libs(self)
        self.cpp_info.libs.sort(reverse=True)
{% set type = manifest.get('type') %}
{% if type == 'lib' %}
        if self.settings.os == "Windows":
            if self.options.shared:
                self.cpp_info.defines = ["{{ name | upper }}_USE_DLLS"]
{% endif %}