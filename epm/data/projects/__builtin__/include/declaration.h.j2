/*
 * This C/C++ header file was generated by epm init for package {{name}}
 * The initial objective is to define macro for C/C++ API declaration
 * 
 * You may modify or add something, but please make sure you are clear
 * what you are doing.
 *
 */
{%- set symbol = name.replace('-','_') -%}
{%- set SYMBOL = symbol.upper() -%}
#ifndef _{{ SYMBOL }}_LIBRARY_DECLARATIONS_HEADER_H_
#define _{{ SYMBOL }}_LIBRARY_DECLARATIONS_HEADER_H_


#if defined(_MSC_VER)
    #if defined({{ name | upper }}_USE_DLLS)
        #ifdef {{ name | upper }}_EXPORTS
            #define {{ SYMBOL }}_EXPORT_ATTRIBUTE __declspec(dllexport)
        #else
            #define {{ SYMBOL }}_EXPORT_ATTRIBUTE __declspec(dllimport)
        #endif
    #else
        #define {{ SYMBOL }}_EXPORT_ATTRIBUTE
    #endif
#else
    #ifndef {{ SYMBOL }}_EXPORT_ATTRIBUTE
        #define {{ SYMBOL }}_EXPORT_ATTRIBUTE
    #endif    
#endif


/* C API  interface declaration macro */
#ifndef {{ SYMBOL }}_CAPI
	#ifdef __cplusplus
        #define  {{ SYMBOL }}_CAPI extern "C" {{ SYMBOL }}_EXPORT_ATTRIBUTE
	#else
	    #define  {{ SYMBOL }}_CAPI {{ SYMBOL }}_EXPORT_ATTRIBUTE
	#endif
#endif

/* C++ API  interface declaration macro */
#ifndef {{ SYMBOL }}_EXPORT
    #define {{ SYMBOL }}_EXPORT {{ SYMBOL }}_EXPORT_ATTRIBUTE
#endif

/* deprecated info on compiler*/
#if defined(__GNUC__) && ((__GNUC__ >= 4) || ((__GNUC__ == 3) && (__GNUC_MINOR__ >= 1)))

    #define {{ SYMBOL }}_DEPRECATED __attribute__((deprecated))
    #define {{ SYMBOL }}_DEPRECATED_TEXT(text) __attribute__((deprecated))

#elif _MSC_VER >= 1400 //vs 2005 or higher
    #define {{ SYMBOL }}_DEPRECATED __declspec(deprecated)
    #define {{ SYMBOL }}_DEPRECATED_TEXT(text) __declspec(deprecated(text))

#else
    #define {{ SYMBOL }}_DEPRECATED
#endif


#endif /* !_{{ SYMBOL }}_LIBRARY_DECLARATIONS_HEADER_H_ */
