#
#
# Gitlab runner config file
#
#

concurrent = {{ gitlab_runner_concurrent | default(1) }}
check_interval = 0

[session_server]
  session_timeout = {{ gitlab_runner_session_timeout | default(1800) }}


{% if gitlab_runner and 'docker' in gitlab_runner  %}
{% include 'docker.toml.j2' %}
{% endif %}


##############################
[[runners]]
  name = "Linux docker-executor mkdocs"
  url = "http://172.16.0.119:8000"
  token = "uPxq4cxyhVjstqW8-awU"
  executor = "docker"
  [runners.custom_build_dir]
  [runners.cache]
    [runners.cache.s3]
    [runners.cache.gcs]
  [runners.docker]
    tls_verify = false
    image = "alpine"
    privileged = false
    disable_entrypoint_overwrite = false
    oom_kill_disable = false
    disable_cache = false
    volumes = ["/cache", "/home/epm/.cache/epm/epm:/home/conan/.cache/epm/epm"]
    pull_policy = "if-not-present"
    shm_size = 0

[[runners]]
  name = "customshell"
  url = "http://172.16.0.119:8000/"
  token = "6WXhN56fxAjz8cPd1kHn"
  executor = "custom"
  builds_dir = "/home/epm/_ci/builds"
  cache_dir = "/home/epm/_ci/cache"
#  environment = ["PATH=$PATH:/home/epm"]
  [runners.custom_build_dir]
  [runners.cache]
    [runners.cache.s3]
    [runners.cache.gcs]
  [runners.custom]
    run_exec = "/home/epm/run_exec.sh"

############run_exec
currentDir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
script=$1
stage=$2
echo script: $script
echo stage: $stage
echo currentDir: $currentDir
export PATH=$PATH:/home/epm
if [[ $stage == build_script ]]; then
	#cd $(dirname $script)
  pwd
  echo CUSTOM_ENV_CI_BUILDS_DIR=$CUSTOM_ENV_CI_BUILDS_DIR
  ls $CUSTOM_ENV_CI_BUILDS_DIR -l
  echo CI_PROJECT_DIR=$CUSTOM_ENV_CI_PROJECT_DIR
  ls -l $CUSTOM_ENV_CI_PROJECT_DIR
  exit
fi
$script
